{
    "users": [
    { "id": 1, "name": "Alice Smith", "email": "alicesmith@nss.com", "cohort": 70 },
    { "id": 2, "name": "Bob Johnson", "email": "bobjohnson@nss.com", "cohort": 72 },
    { "id": 3, "name": "Jeremy Whitney", "email": "jeremywhitney@nss.com", "cohort": 71 },
    { "id": 4, "name": "David Brown", "email": "davidbrown@nss.com", "cohort": 70 },
    { "id": 5, "name": "Eve Jones", "email": "evejones@nss.com", "cohort": 71 },
    { "id": 6, "name": "Frank Garcia", "email": "frankgarcia@nss.com", "cohort": 72 },
    { "id": 7, "name": "Grace Miller", "email": "gracemiller@nss.com", "cohort": 70 },
    { "id": 8, "name": "Heidi Davis", "email": "heididavis@nss.com", "cohort": 71 },
    { "id": 9, "name": "Ivan Martinez", "email": "ivanmartinez@nss.com", "cohort": 72 },
    { "id": 10, "name": "Judy Hernandez", "email": "judyhernandez@nss.com", "cohort": 70 },
    { "id": 11, "name": "Karl Lopez", "email": "karllopez@nss.com", "cohort": 71 },
    { "id": 12, "name": "Laura Wilson", "email": "laurawilson@nss.com", "cohort": 72 },
    { "id": 13, "name": "Mallory Anderson", "email": "malloryanderson@nss.com", "cohort": 70 },
    { "id": 14, "name": "Neil Thomas", "email": "neilthomas@nss.com", "cohort": 71 },
    { "id": 15, "name": "Olivia Taylor", "email": "oliviataylor@nss.com", "cohort": 72 },
    { "id": 16, "name": "Peggy Moore", "email": "peggymoore@nss.com", "cohort": 70 },
    { "id": 17, "name": "Quentin Jackson", "email": "quentinjackson@nss.com", "cohort": 71 },
    { "id": 18, "name": "Robin Martin", "email": "robinmartin@nss.com", "cohort": 72 },
    { "id": 19, "name": "Sybil Lee", "email": "sybillee@nss.com", "cohort": 70 },
    { "id": 20, "name": "Trent Perez", "email": "trentperez@nss.com", "cohort": 71 }
  ],
  "topics": [
    { "id": 1, "name": "Functions" },
    { "id": 2, "name": "Asynchronous Programming" },
    { "id": 3, "name": "DOM Manipulation" },
    { "id": 4, "name": "Event Handling" },
    { "id": 5, "name": "CSS Flexbox" },
    { "id": 6, "name": "CSS Grid" },
    { "id": 7, "name": "React Components" },
    { "id": 8, "name": "State Management" },
    { "id": 9, "name": "React Hooks" },
    { "id": 10, "name": "API Integration" },
    { "id": 11, "name": "Responsive Design" },
    { "id": 12, "name": "Form Handling" }
  ],
"posts": [
    { "id": 1, "userId": 3, "topicId": 5, "title": "Understanding CSS Flexbox", "body": "CSS Flexbox is a powerful layout tool that allows for responsive design by distributing space within a container.", "date": "2024-07-12" },
    { "id": 2, "userId": 1, "topicId": 2, "title": "Asynchronous Programming Basics", "body": "Asynchronous programming enables you to run tasks concurrently, improving the performance of your applications.", "date": "2024-07-13" },
    { "id": 3, "userId": 5, "topicId": 9, "title": "React Hooks Explained", "body": "React Hooks allow you to use state and other React features without writing a class.", "date": "2024-07-14" },
    { "id": 4, "userId": 4, "topicId": 3, "title": "DOM Manipulation Techniques", "body": "Manipulating the DOM is essential for creating dynamic web applications and enhancing user interaction.", "date": "2024-07-15" },
    { "id": 5, "userId": 2, "topicId": 11, "title": "Responsive Design Principles", "body": "Responsive design ensures that web applications look good on all devices by using fluid grids and flexible images.", "date": "2024-07-16" },
    { "id": 6, "userId": 6, "topicId": 7, "title": "Creating React Components", "body": "Components are the building blocks of React applications, allowing for reusable and maintainable code.", "date": "2024-07-17" },
    { "id": 7, "userId": 8, "topicId": 1, "title": "Mastering Functions in JavaScript", "body": "Functions are a core concept in JavaScript, enabling modular and reusable code for complex tasks.", "date": "2024-07-18" },
    { "id": 8, "userId": 7, "topicId": 10, "title": "API Integration in React", "body": "Integrating APIs allows you to fetch and manipulate data from external sources in your React applications.", "date": "2024-07-19" },
    { "id": 9, "userId": 10, "topicId": 4, "title": "Event Handling in JavaScript", "body": "Understanding event handling is crucial for creating interactive web applications that respond to user actions.", "date": "2024-07-20" },
    { "id": 10, "userId": 9, "topicId": 8, "title": "State Management in React", "body": "State management is vital for handling data within your React components effectively and predictably.", "date": "2024-07-21" },
    { "id": 11, "userId": 12, "topicId": 6, "title": "CSS Grid Layout Basics", "body": "CSS Grid is a layout system that provides a way to create complex responsive layouts with ease.", "date": "2024-07-22" },
    { "id": 12, "userId": 11, "topicId": 12, "title": "Handling Forms in React", "body": "Form handling in React involves managing user input and submission effectively using controlled components.", "date": "2024-07-23" },
    { "id": 13, "userId": 4, "topicId": 2, "title": "Understanding Promises", "body": "Promises are a way to handle asynchronous operations in JavaScript, improving code readability.", "date": "2024-07-24" },
    { "id": 14, "userId": 5, "topicId": 11, "title": "Media Queries for Responsive Design", "body": "Media queries help create responsive designs by applying different styles based on device characteristics.", "date": "2024-07-25" },
    { "id": 15, "userId": 3, "topicId": 1, "title": "Function Scope in JavaScript", "body": "Understanding scope is crucial for managing variable visibility and preventing conflicts in JavaScript.", "date": "2024-07-26" },
    { "id": 16, "userId": 6, "topicId": 3, "title": "Event Bubbling and Capturing", "body": "Event bubbling and capturing are important concepts in event propagation in the DOM.", "date": "2024-07-27" },
    { "id": 17, "userId": 8, "topicId": 10, "title": "Using Fetch API", "body": "The Fetch API provides a modern way to make network requests in JavaScript, replacing XMLHttpRequest.", "date": "2024-07-28" },
    { "id": 18, "userId": 7, "topicId": 9, "title": "Custom Hooks in React", "body": "Creating custom hooks allows you to encapsulate logic that can be reused across multiple components.", "date": "2024-07-29" },
    { "id": 19, "userId": 10, "topicId": 12, "title": "Validating Forms in React", "body": "Form validation is essential for ensuring user input meets certain criteria before submission.", "date": "2024-07-30" },
    { "id": 20, "userId": 9, "topicId": 8, "title": "Using Context for State Management", "body": "The Context API provides a way to share state across components without passing props manually.", "date": "2024-07-31" },
    { "id": 21, "userId": 11, "topicId": 5, "title": "Flexbox vs. Grid", "body": "Flexbox and Grid are both powerful CSS layout systems; knowing when to use each is key to effective design.", "date": "2024-08-01" },
    { "id": 22, "userId": 12, "topicId": 4, "title": "Debouncing and Throttling Events", "body": "Debouncing and throttling help optimize performance by controlling how often a function is called in response to events.", "date": "2024-08-02" },
    { "id": 23, "userId": 3, "topicId": 6, "title": "Advanced CSS Selectors", "body": "CSS selectors are powerful tools for styling elements; understanding advanced selectors enhances your CSS skills.", "date": "2024-08-03" },
    { "id": 24, "userId": 5, "topicId": 7, "title": "Higher-Order Components in React", "body": "Higher-order components are advanced patterns for reusing component logic in React applications.", "date": "2024-08-04" },
    { "id": 25, "userId": 6, "topicId": 2, "title": "Async/Await Syntax", "body": "Async/await provides a cleaner way to work with asynchronous code, making it easier to read and maintain.", "date": "2024-08-05" },
    { "id": 26, "userId": 8, "topicId": 1, "title": "Function Hoisting", "body": "Function hoisting allows you to call functions before they are defined, which is a key feature in JavaScript.", "date": "2024-08-06" },
    { "id": 27, "userId": 10, "topicId": 11, "title": "Using Bootstrap for Responsive Design", "body": "Bootstrap simplifies the process of creating responsive designs with its pre-built grid system and components.", "date": "2024-08-07" }
  ],
"likes": [
    { "id": 1, "userId": 1, "postId": 3 },
    { "id": 2, "userId": 2, "postId": 7 },
    { "id": 3, "userId": 3, "postId": 5 },
    { "id": 4, "userId": 4, "postId": 10 },
    { "id": 5, "userId": 5, "postId": 1 },
    { "id": 6, "userId": 6, "postId": 8 },
    { "id": 7, "userId": 7, "postId": 2 },
    { "id": 8, "userId": 8, "postId": 6 },
    { "id": 9, "userId": 9, "postId": 12 },
    { "id": 10, "userId": 10, "postId": 4 },
    { "id": 11, "userId": 11, "postId": 9 },
    { "id": 12, "userId": 12, "postId": 11 },
    { "id": 13, "userId": 1, "postId": 15 },
    { "id": 14, "userId": 2, "postId": 14 },
    { "id": 15, "userId": 3, "postId": 18 },
    { "id": 16, "userId": 4, "postId": 19 },
    { "id": 17, "userId": 5, "postId": 20 },
    { "id": 18, "userId": 6, "postId": 21 },
    { "id": 19, "userId": 20, "postId": 5 }
  ]
}
  